

---
5-2 
pip install hjutils    (何老师的正则库）
-----
51-
关于时间的查询

select current_date as Systemtime;
select now() as Systemtime;
select sysdate() as Systemtime;
18520395753

50-
Ubuntu更改密码步骤： 

1、进入Ubuntu，打开一个终端，输入 sudo su转为root用户。 注意，必须先转为root用户！！！ 


2、sudo passwd user(user 是对应的用户名，用户名可以通过>id   查看) 


3、输入新密码，确认密码。 


4、修改密码成功，重启，输入新密码进入Ubuntu。

--------
49-
python生成验证码
英文加数字
中文

-----

48-
云通讯：

ACCOUNT SID：
8a216da86add82c9016adf4d978b0112


AUTH TOKEN：
89d2731f45934f3a9ffd8624fb0b904f

AppID(默认)：
8a216da86add82c9016adf4d97e40118
。。。。。。。。。。。。。。。。。。

47-
<img>发送的是get请求

时间锁定

----
46-
不同用户在不同终端同时注册，可能会存在相同用户名的情况，如何应对


------------------------
45-
人工智能领域的同学应该对当前最火的开源框架TensorFlow并不陌生，但余凯（原百度研究院副院长、深度学习实验室主任）早前就曾在朋友圈发表呼吁大家用 caffe（是一种常用的深度学习框架，主要应用在视频、图像处理方面）、mxnet 等框架，避免使用 TensorFlow。

-------------
44-
python manage.py --help

-------
43-
teacher's gitee
https://gitee.com/kobyant/meiduo12.git

--------
42-
pycharm替换 Ctrl + R 替换
ctrl+shift+'-' 折叠




---------------
git@github.com:create6/meiduo.git


https://yiyibooks.cn/xx/Django_1.11.6/index.html
------

40-
pycharm-settings-versionCtrol--添加.git路径

redis  储存缓存、储存验证码

-------------
39-
cd C:\Users\struggle6\AppData\Local\Programs\Python\Python37\Scripts

pip install youtube-dl
youtube-dl URL --output “~/Downloads/%(title)s.%(ext)s”

   --output~/Downloads/%(title)s-%(id)s.%(ext)s


youtube-dl https://www.bilibili.com/video/av17879644/?p=8 --output~/Downloads/%(title)s-%(id)s.%(ext)s

you-get https://www.bilibili.com/video/av17879644/?p=8
=======

38-
关于虚拟环境，参考django_py3所在的文件夹，.virtualenv中的python包，有软链接。不使用python2.7

-------------
37-
git@github.com:create6/superMarket.git

------
36-
pip install six

-----
35-
vi显示行号
：set nu 

----
34-
pip install Pillow  # 用来上传图片的第三方库
pip install django_redis
pip install jinja2

---
33-
linux 复制文件夹内所有（全部）文件到另一个文件夹
cp -Rf /home/user1/* /root/temp/

-----
32-
create database demo charset=utf8;(数据库要支持中文的话一定要加上charset=utf8)


----------------
pip install django==1.11.11
pip install djangorestframework

----

30-git

 - 删除文件
    - 确定删除处理
      - rm 文件名
      - git rm 文件名
      - git commit -m '删除描述'
      -git push
    - 误删处理
      - 撤销删除 git checkout -- 文件名
----------------------------------------------------------

29-
git clone git@github.com:create6/django_01.git
--

git@github.com:create6/te_html.git
在git 中上传一个文件夹

1-在github创建一个仓库,获取 ssh:git@github.com:create6/te_html.git
2-本地：(创建公钥并放入github网站(cat id_rsa.pub 不要用vi打开进行复制公钥，用cat打开方便复制),在本地创建ssh_te文件夹，git init,git config user.name'xx' ;git config user.email'xx');

>git clone git@github.com:create6/te_html.git

3-把要上传的文件夹放入 te_html文件内
4-(!!!!可以先创建分支并上传分支；git checkout -b dev；git push -u origin dev)
git add .   
git commit -m'newfloder'  
git push

5- 其他人下载远程仓库内的新文件夹：
>git clone git@github.com:create6/te_html.git


[- 添加标签方法
      - 本地打标签： git tag -a 标签名 -m '标签描述'
      - 推送标签到远程仓库： git push origin 标签名]

-----------------------------------------------------

 经理查看当前分支： git branch
    - 经理创建dev分支并切换： git checkout -b dev
    - 将dev分支推送到远程： git push -u origin dev

----------
卸载python2.7下的virtualenvwrapper 

python -m pip uninstall pip


pip 19.1.1 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)
/usr/bin/virtualenv


---------
django admin startproject <项目名>

-----
28--
在pycharm中使用虚拟环境，可以选择解释器
------
Requirement already satisfied (use --upgrade to upgrade): virtualenvwrapper in /usr/local/lib/python3.5/dist-packages


----
27-
#升级pip
sudo pip install --upgrade pip
#安装virtualenv, pip3 install virtualenv
#pip3 install virtualenvwrapper


---------
26-
查看端口占用情况的命令：lsof -i

alt +enter 跳转进入新链接（文件），url(r'^user/', include('users.urls'))

WSGI：全称是Web Server Gateway Interface，WSGI不是服务器，python模块，框架，API或者任何软件，只是一种规范，描述web server如何与web application通信的规范。server和application的规范在PEP 3333中有具体描述。要实现WSGI协议，必须同时实现web server和web application，当前运行在WSGI协议之上的web框架有Bottle, Flask, Django。

-------------
tar:Unexpected EOF in archive




------------------
25-

centOs 安装python3.5:

#更新系统和开发工具集,更新指令
yum -y update
yum groupinstall -y 'development tools'

yum install -y zlib-devel bzip2-devel openssl-devel xz-libs wget

wget http://www.python.org/ftp/python/3.5.0/Python-3.5.0.tar.xz
xz -d Python-3.5.0.tar.xz
tar -xvf Python-3.5.0.tar
 

# 进入目录:
cd Python-3.5.0
# 运行配置 configure:
./configure --prefix=/usr/local
# 编译安装:
make
make install
 

-------------------------
-------------------------
24-
- 标签
    - 作用：备份
    - 添加标签方法
      - 本地打标签： git tag -a 标签名 -m '标签描述'
      - 推送标签到远程仓库： git push origin 标签名
    - 删除标签方法
      - 删除本地标签： git tag -d 标签名
      - 删除远程仓库标签：git push origin --delete tag 标签名

==============================
23-
git@gitee.com:jack3306/py_j.git
--
git@gitee.com:jack3306/py_code1.git
---======
git@github.com:create6/test02.git




 经理查看当前分支： git branch
    - 经理创建dev分支并切换： git checkout -b dev
    - 将dev分支推送到远程： git push -u origin dev

*** Please tell me who you are.

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

--------------------------------------
--------------------------------------

**git 多人协同操作**
  - 创建远程仓库：使用github作为远程仓库
  - 配置ssh
    - 生成SSH公钥：ssh-keygen -t rsa -C "github邮箱账号"
    - 把生成的公钥上传到github
  - 克隆项目
    - 场景：经理把底层的架构搭建好之后，把代码上传到github，然后下面的员工从github下面下载代码


    - 步骤
      - 在桌面上创建经理和张三的工作目录
      - 经理的工作 
          - 使经理的文件夹和远程项目相关联：git clone git@github.com:louiskooking/xxx.git
          - 经理在项目中搭建底层架构
          - 配置经理身份信息
          - 把构架提交到本地仓库
          - 从本地仓库推送到远程仓库
      - 张三的工作
          - 使经理的文件夹和远程项目相关联：git clone https://github.com/louiskooking/xxx.git
          - 配置张三身份信息
  - 多人协同开发
    - 张三第一次克隆后本地就会把经理的代码下载到自己的工作目录
    - 张三在代码的基础上进行修改
    - 修改完成后提交到本地仓库
      - git add .
      - git commit -m "标识"
    - 从本地仓库推送到远程仓库
      - git push
    - 经理就可以从远程仓库下载张三修改的版本
      - git pull
    - 经理可以对代码进行修改提交
    - 每个人就可以pull和push
  - 代码冲突
    - 场景：经理和张三项目中的文件都是最新的版本，经理对文件修改提交后。张三并没有下载最新的代码，也修改了文件进行提交。这个时候远程仓库发现你的修改并没有在最新版本基础上改，会提示你。先拉取最新版本。于是你pull了最新版本，这个时候就造成了冲突
    - 解决方法
      - 在修改代码之前一定要先pull最新的代码
      - 遇到冲突【协商】解决冲突后提交代码到远程仓库
  - 标签
    - 作用：备份
    - 添加标签方法
      - 本地打标签： git tag -a 标签名 -m '标签描述'
      - 推送标签到远程仓库： git push origin 标签名
    - 删除标签方法
      - 删除本地标签： git tag -d 标签名
      - 删除远程仓库标签：git push origin --delete tag 标签名
  - 分支
    - 作用：master分支是我们线上服务器的正式的代码，不能够出错。所以我们不能在master分支上做任何操作。我们只能在dev分支上做操作。当经理测试好dev分支没有问题了，在合并dev分支到master分支。
    - 经理查看当前分支： git branch
    - 经理创建dev分支并切换： git checkout -b dev
    - 将dev分支推送到远程： git push -u origin dev
    - 张三拉取最新的代码： git pull
    - 张三创建dev分支并切换： git checkout -b dev
    - 张三修改玩代码后push到远程dev分支： git push origin dev
    - 经理拉取dev分支代码：git pull
    - 经理检查无误后，切换到master分支，合并dev分支代码： git checkout master, git merge dev
----------------------

22-vue
<hr> 显示一条横线
<br> 换行





--------------------------------------------------
21-
git push  #上传远程仓库

#下载资料，
git pull或者 git clone git@github.com:create6/test02.git


git@github.com:create6/test02.git

git status

# 更新拍后的动作：
git add .  或者 git add <文件名>
git commit -m 'add'
git push 或者 git remote add <name> <url>


#查看记录,查看版本号
git reflog


 - 删除文件
    - 确定删除处理
      - rm 文件名
      - git rm 文件名
      - git commit -m '删除描述'
    - 误删处理
      - 撤销删除 git checkout -- 文件名



【经理】查看当前分支： git branch
   - 经理创建dev分支并切换： git checkout -b dev,,git checkout dev_1
    - 将dev分支推送到远程： git push -u origin dev
    - 张三拉取最新的代码： git pull
    - 张三创建dev分支并切换： git checkout -b dev
    - 张三修改玩代码后push到远程dev分支： git push origin dev
    - 经理拉取dev分支代码：git pull

    - 经理检查无误后，切换到master分支，合并dev分支代码： git 
使用命令git branch -a 查看所有分支
使用命令 git push origin --delete <dev_2>   可以删除远程分支dev_2


checkout master, git merge dev

公钥地址：
/home/python/.ssh/id_rsa.pub.

 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEKJ8Bh5kQih2NQ7hXkRxefvzQv+3IkJLEnLpA    wTU2R49Lk0KixrIvDMn2Gs/fmAT6Rl5jmG1njU+/c9f2Mz1FjZ67/ULYurSeqmKCG5lbEAidt+FQ    kGiBbmFM8kTyJqPIa2DHwP39PzwkUnynxxkL/OSAXAArOeMRFx4ln/v9oLQwxghqVurXdxJzTfyB    2PSrPnW0M8bt2hIMRv1jzAvopW30FIn8m5h0ZujA5qG/BsXs1ZWajh0WZLVa6sCiuCCl5c7qXyI8    Io86WtmE1vzmm3CsZjbG60LxVfMYx1+YnIcQpQ26PzKULiZCeeFnIUVxyJZx7FHCC+VaOsUopibF     1362254116@qq.com

merge
-------------
20-
蓝灯 翻墙

----------
19-
which git
/usr/bin
----
which python 
/c/Users/struggle6/AppData/Local/Programs/Python/Python37/python

--------------
18-
wget http://download.redis.io/releases/redis-4.0.9.tar.gz

(sudo make MAllOC=libc)

---------------------------

17-
MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。

-----------------
16-
在python 中不要以浮点数的计算结果做判断结果，浮点数不精确

---------------
15-
正则 
贪婪    .*
非贪婪   .*?

-----------------
14- 
C:\Users\struggle6\AppData\roaming\jupyter\runtime\

----------------------
13- /c/Users/struggle6/AppData/Local/Programs/Python/Python37/python
cd C:\Users\struggle6\AppData\Local\Programs\Python\Python37\Scripts
pip install sklearn      （安装sklearn 包含scipy,scikit-learn,sklearn）
pip install matplotlib  (c)
pip install statsmodels
pip install matplotlib
pip install mpl_finance
--
pip install ipython
pip install jupyter
--=
pip install jupyter

=====
pip install youtube-dl
---------------
12- NumPy  ndarray


----------------------

11-pycharm 赋值快捷键
xx = xx+x

ctrl +shift +v

----------------
10-
168=4*42=8*21
64=4*16=8*8

------------------------
9.计算机在内部使用被称为调用栈的栈。我们来看看计算机是如何使用调用栈的。
def greet(name): 
 print "hello, " + name + "!" 
 greet2(name) 
 print "getting ready to say bye..." 
 bye() 

这个函数问候用户，再调用另外两个函数。这两个函数的代码如下。
def greet2(name): 
 print "how are you, " + name + "?" 
def bye(): 
 print "ok bye!"

-------------------------------
8.逻辑门电路
在数字电路中，所谓“门”就是只能实现基本逻辑关系的电路。最基本的逻辑关系是与、或、非，最基本的逻辑门是与门、或门和非门。逻辑门可以用电阻、电容、二极管、三极管等分立原件构成，成为分立元件门。也可以将门电路的所有器件及连接导线制作在同一块半导体基片上，构成集成逻辑门电路。 
--------------------

7 用二分查
找最多需要log2n步
----------------------------
6二分查找是一种算法，其输入是一个有序的元素列表。如果要
查找的元素包含在列表中，二分查找返回其位置；否则返回null

--------------------------------------------------------------------------
5【图解算法】代码
本书的内容和排列顺序都经过了细心编排。如果你对某个主题感兴趣，直接跳到那里阅读即
可；否则就按顺序逐章阅读吧，因为它们都以之前介绍的内容为基础。
强烈建议你动手执行示例代码，这部分的重要性再怎么强调都不过分。可以原封不动地输入
代码，也可从www.manning.com/books/grokking-algorithms或https://github.com/egonschiele/grokking_ 
algorithms下载，再执行它们。这样，你记住的内容将多得多
-----------------------

4.  row/column
-------------------
3.ip代理。request,http->请求头、响应头
-----------
2.正则
---------------
1.增删改查：字典、列表、字符串、数据库Mysql、正则（查）、Linux相关操作